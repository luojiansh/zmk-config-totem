//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3
#define TVP1 4
#define TVP2 5

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <170>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        combo_tvp {
            timeout-ms = <100>;
            key-positions = <11 12 13>;
            bindings = <&tog 0>;
        };
    };

    macros {
        gif: gif {
            label = "giphy";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp N2>,
                <&macro_release>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp G &kp I &kp F>;
        };
    };

    behaviors {
        ltq: ltq {
            compatible = "zmk,behavior-hold-tap";
            label = "LTQ";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
            flavor = "tap-preferred";
        };

        caps_dance: caps_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "CAPS_DANCE";
            #binding-cells = <0>;
            bindings = <&caps_word>, <&kp CAPS>;
        };

        base_layers: base_layers {
            compatible = "zmk,behavior-tap-dance";
            label = "BASE_LAYERS";
            #binding-cells = <0>;
            bindings = <&to 0>, <&to 1>;
        };

        tog_off: tog_off {
            compatible = "zmk,behavior-toggle-layer";
            label = "TOG_OFF";
            #binding-cells = <1>;
            toggle-mode = "off";
        };

        mac_layers: mac_layers {
            compatible = "zmk,behavior-tap-dance";
            label = "MAC_LAYERS";
            #binding-cells = <0>;
            bindings = <&to 2>, <&to 3>;
        };

        mouse_layer: mouse_layer {
            compatible = "zmk,behavior-tap-dance";
            label = "MOUSE_LAYER";
            #binding-cells = <0>;
            bindings = <&mo 11>, <&tog_on 11>;
        };

        tog_on: tog_on {
            compatible = "zmk,behavior-toggle-layer";
            label = "TOG_ON";
            #binding-cells = <1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        Base {
            bindings = <
             &kp Q  &kp W  &kp F         &kp P         &kp G         &kp J             &kp L            &kp U           &kp Y    &kp SQT
             &kp A  &kp R  &kp S         &kp T         &kp D         &kp H             &kp N            &kp E           &kp I    &kp O
&key_repeat  &kp Z  &kp X  &kp C         &kp V         &kp B         &kp K             &kp M            &kp COMMA       &kp DOT  &kp FSLH  &mouse_layer
                           &lt 8 ESCAPE  &ltq 4 SPACE  &ltq 6 TAB    &ltq 9 BACKSPACE  &mt RSHFT ENTER  &ltq 10 DELETE
            >;
        };

        Qwerty {
            bindings = <
             &kp Q  &kp W  &kp E         &kp R         &kp T         &kp Y             &kp U            &kp I           &kp O    &kp P
             &kp A  &kp S  &kp D         &kp F         &kp G         &kp H             &kp J            &kp K           &kp L    &kp SQT
&key_repeat  &kp Z  &kp X  &kp C         &kp V         &kp B         &kp N             &kp M            &kp COMMA       &kp DOT  &kp FSLH  &mouse_layer
                           &lt 8 ESCAPE  &ltq 4 SPACE  &ltq 6 TAB    &ltq 9 BACKSPACE  &mt RSHFT ENTER  &ltq 10 DELETE
            >;
        };

        Mac {
            bindings = <
             &kp Q  &kp W  &kp F         &kp P         &kp G         &kp J             &kp L            &kp U           &kp Y    &kp SQT
             &kp A  &kp R  &kp S         &kp T         &kp D         &kp H             &kp N            &kp E           &kp I    &kp O
&key_repeat  &kp Z  &kp X  &kp C         &kp V         &kp B         &kp K             &kp M            &kp COMMA       &kp DOT  &kp FSLH  &mouse_layer
                           &lt 8 ESCAPE  &ltq 5 SPACE  &ltq 7 TAB    &ltq 9 BACKSPACE  &mt RSHFT ENTER  &ltq 10 DELETE
            >;
        };

        Mac-Qwerty {
            bindings = <
             &kp Q  &kp W  &kp E         &kp R         &kp T         &kp Y             &kp U            &kp I           &kp O    &kp P
             &kp A  &kp S  &kp D         &kp F         &kp G         &kp H             &kp J            &kp K           &kp L    &kp SQT
&key_repeat  &kp Z  &kp X  &kp C         &kp V         &kp B         &kp N             &kp M            &kp COMMA       &kp DOT  &kp FSLH  &mouse_layer
                           &lt 8 ESCAPE  &ltq 5 SPACE  &ltq 7 TAB    &ltq 9 BACKSPACE  &mt RSHFT ENTER  &ltq 10 DELETE
            >;
        };

        Symbols {
            bindings = <
        &kp LS(EXCL)  &kp LS(AT)  &kp LS(POUND)  &kp LS(DLLR)  &kp LS(PRCNT)    &kp LS(TILDE)  &kp GRAVE        &kp LS(COLON)  &kp SEMI  &kp LS(PLUS)
        &sk LGUI      &sk LALT    &sk LCTRL      &sk LSHFT     &kp LS(CARET)    &kp EQUAL      &kp LS(LPAR)     &kp LS(LBRC)   &kp LBKT  &kp MINUS
&trans  &kp LS(LT)    &kp LS(GT)  &kp BSLH       &kp LS(PIPE)  &kp LS(AMPS)     &kp LS(STAR)   &kp LS(RPAR)     &kp LS(RBRC)   &kp RBKT  &kp LS(UNDER)  &trans
                                  &trans         &trans        &trans           &kp LC(BSPC)   &mt RSHFT ENTER  &kp ESC
            >;
        };

        Mac-Sym {
            bindings = <
        &kp LS(EXCL)  &kp LS(AT)  &kp LS(POUND)  &kp LS(DLLR)  &kp LS(PRCNT)    &kp LS(TILDE)  &kp GRAVE        &kp LS(COLON)  &kp SEMI  &kp LS(PLUS)
        &sk LGUI      &sk LALT    &sk LCTRL      &sk LSHFT     &kp LS(CARET)    &kp EQUAL      &kp LS(LPAR)     &kp LS(LBRC)   &kp LBKT  &kp MINUS
&trans  &kp LS(LT)    &kp LS(GT)  &kp BSLH       &kp LS(PIPE)  &kp LS(AMPS)     &kp LS(STAR)   &kp LS(RPAR)     &kp LS(RBRC)   &kp RBKT  &kp LS(UNDER)  &trans
                                  &trans         &trans        &trans           &kp LG(BSPC)   &mt RSHFT ENTER  &kp ESC
            >;
        };

        Numbers {
            bindings = <
        &kp LEFT    &kp DOWN    &kp UP     &kp RIGHT  &kp LS(PRCNT)    &kp FSLH      &kp N7           &kp N8   &kp N9  &kp LS(PLUS)
        &sk LGUI    &sk LALT    &sk LCTRL  &sk LSHFT  &sk RALT         &kp EQUAL     &kp N4           &kp N5   &kp N6  &kp MINUS
&trans  &kp LS(LT)  &kp LS(GT)  &kp TAB    &kp BSPC   &kp SPACE        &kp LS(STAR)  &kp N1           &kp N2   &kp N3  &kp LS(UNDER)  &trans
                                &trans     &trans     &trans           &kp N0        &mt RSHFT ENTER  &kp DOT
            >;
        };

        Mac-Num {
            bindings = <
        &kp LEFT    &kp DOWN    &kp UP     &kp RIGHT  &kp LS(PRCNT)    &kp FSLH         &kp N7           &kp N8   &kp N9  &kp LS(PLUS)
        &sk LGUI    &sk LALT    &sk LCTRL  &sk LSHFT  &sk RALT         &kp EQUAL        &kp N4           &kp N5   &kp N6  &kp MINUS
&trans  &kp LS(LT)  &kp LS(GT)  &kp TAB    &kp BSPC   &kp SPACE        &kp LS(STAR)     &kp N1           &kp N2   &kp N3  &kp LS(UNDER)  &trans
                                &trans     &trans     &trans           &kp KP_NUMBER_0  &mt RSHFT ENTER  &kp DOT
            >;
        };

        Function {
            bindings = <
        &kp C_STOP  &kp C_PREVIOUS  &kp C_PP       &kp C_NEXT     &kp C_BRI_UP    &kp F12   &kp F7     &kp F8     &kp F9  &caps_dance
        &sk LGUI    &sk LALT        &sk LCTRL      &sk LSHFT      &kp C_BRI_DN    &kp F11   &kp F4     &kp F5     &kp F6  &base_layers
&trans  &kp C_MUTE  &kp C_VOL_DN    &kp LS(LC(C))  &kp LS(LC(V))  &kp C_VOL_UP    &kp F10   &kp F1     &kp F2     &kp F3  &mac_layers   &trans
                                    &trans         &trans         &trans          &kp RALT  &kp RSHFT  &kp RCTRL
            >;
        };

        Navigation {
            bindings = <
        &kp ESC    &kp C_AC_BACK  &kp C_AC_FIND  &kp C_AC_FORWARD  &kp C_AC_INSERT    &kp PG_UP  &kp HOME  &kp UP    &kp END     &caps_dance
        &sk LGUI   &sk LALT       &sk LCTRL      &sk LSHFT         &sk RALT           &kp PG_DN  &kp LEFT  &kp DOWN  &kp RIGHT   &kp DEL
&trans  &kp LC(Z)  &kp LC(X)      &kp LC(C)      &kp LC(V)         &kp LGUI           &kp RET    &kp BSPC  &kp TAB   &kp C_MENU  &kp PRINTSCREEN  &trans
                                  &kp LCTRL      &kp LSHFT         &kp LALT           &trans     &trans    &trans
            >;
        };

        Control {
            bindings = <
            &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none   &none           &none   &none  &none
            &none         &none         &none         &bt BT_CLR    &out OUT_TOG    &none   &bt BT_CLR_ALL  &none   &none  &none
&sys_reset  &bootloader   &none         &none         &out OUT_USB  &out OUT_BLE    &none   &none           &none   &none  &bootloader  &sys_reset
                                        &trans        &trans        &trans          &trans  &trans          &trans
            >;
        };

        Mouse {
            bindings = <
       &none     &none     &none      &none      &none        &msc SCRL_UP    &msc SCRL_LEFT  &mmv MOVE_UP    &msc SCRL_RIGHT  &none
       &sk LGUI  &sk LALT  &sk LCTRL  &sk LSHFT  &sk RALT     &msc SCRL_DOWN  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none
&none  &none     &none     &none      &none      &none        &none           &none           &none           &none            &none  &tog_off 11
                           &mkp MCLK  &mkp LCLK  &mkp RCLK    &mkp LCLK       &mkp RCLK       &mkp MCLK
            >;
        };
    };
};
